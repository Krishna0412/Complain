<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	
	<sub-flow name="Subflow" doc:id="502c1c09-b040-4144-a5f8-f7b49dbf8321" >
		<set-variable value="#[payload.productCode]" doc:name="Code" doc:id="cf5266d3-12f8-4563-a920-45b869de6825" variableName="Code" />
		<set-variable value="#[payload.complainDesc]" doc:name="Desc" doc:id="1008bc3d-770e-4a4a-80e9-3c007db0db8d" variableName="Desc" />
		<set-variable value="#[payload.complainDate]" doc:name="Date" doc:id="6d8719be-e53c-4fee-8f4d-9c9c1e7fbf18" variableName="Date" />
		<set-variable value="#[payload.customerNumber]" doc:name="Number" doc:id="c9db2b57-9c78-4097-8a82-747d2a071d4a" variableName="Number" />
	</sub-flow>
	<flow name="GetAllFlow" doc:id="4b8b8e50-b3cb-4b18-ad66-e14d4fbe570b" >
		<choice doc:name="Choice" doc:id="52ca65f7-2880-44c7-9cbd-72142a32068c" >
			<when expression="#[attributes.queryParams.'customerNumber' != null and attributes.queryParams.'orderNumber' !=null and attributes.queryParams.'orderDate' !=null]">
				<db:select doc:name="Select" doc:id="93cfee9b-5e12-4791-b6b7-8415e269f16a" config-ref="Database_Config">
					<db:sql ><![CDATA[select C.customerNumber,O.orderNumber,O.orderDate,P.productCode,P.productName,P.buyPrice from complaint C join Orders O On O.customerNumber=C.customerNumber join OrderDetails D On D.orderNumber=O.OrderNumber join Products P on P.productCode=D.productCode
where C.customerNumber=:cust and O.orderNumber=:OID and O.orderDate=:OD;]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	'cust': attributes.queryParams.'customerNumber',
	'OID': attributes.queryParams.'orderNumber',
	'OD': attributes.queryParams.'orderDate'
}]]]></db:input-parameters>
				</db:select>
			</when>
			<when expression="#[attributes.queryParams.'customerNumber' != null]">
				<db:select doc:name="Select" doc:id="fe35509f-cdc2-40fe-a393-5bfcaa1101fb" config-ref="Database_Config">
					<db:sql ><![CDATA[select C.customerNumber,O.orderNumber,O.orderDate,P.productCode,P.productName,P.buyPrice from complaint C join Orders O On O.customerNumber=C.customerNumber join OrderDetails D On D.orderNumber=O.OrderNumber join Products P on P.productCode=D.productCode
where C.customerNumber=:cust;]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	'cust': attributes.queryParams.'customerNumber'
}]]]></db:input-parameters>
				</db:select>
			</when>
			<when expression="#[attributes.queryParams.'orderNumber' !=null]">
				<db:select doc:name="Select" doc:id="c44f1380-f1b4-4ed4-bb61-90fd49985832" config-ref="Database_Config">
					<db:sql ><![CDATA[select C.customerNumber,O.orderNumber,O.orderDate,P.productCode,P.productName,P.buyPrice from complaint C join Orders O On O.customerNumber=C.customerNumber join OrderDetails D On D.orderNumber=O.OrderNumber join Products P on P.productCode=D.productCode
where O.orderNumber=:OID;]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	'OID': attributes.queryParams.'orderNumber'
}]]]></db:input-parameters>
				</db:select>
			</when>
			<when expression="#[attributes.queryParams.'orderDate' !=null]">
				<db:select doc:name="Select" doc:id="d7dc97d1-88c7-47d4-ab0b-70388c1b9e1b" config-ref="Database_Config">
					<db:sql ><![CDATA[select C.customerNumber,O.orderNumber,O.orderDate,P.productCode,P.productName,P.buyPrice from complaint C join Orders O On O.customerNumber=C.customerNumber join OrderDetails D On D.orderNumber=O.OrderNumber join Products P on P.productCode=D.productCode
where O.orderDate=:OD;]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	'OD': attributes.queryParams.'orderDate'
}]]]></db:input-parameters>
				</db:select>
			</when>
			<otherwise >
				<db:select doc:name="Select" doc:id="93994897-bd07-4616-90df-7eac78b2e5cf" config-ref="Database_Config">
					<db:sql ><![CDATA[select C.customerNumber,O.orderNumber,O.orderDate,P.productCode,P.productName,P.buyPrice from complaint C join Orders O On O.customerNumber=C.customerNumber join OrderDetails D On D.orderNumber=O.OrderNumber join Products P on P.productCode=D.productCode
]]></db:sql>
				</db:select>
			</otherwise>
		</choice>
		<ee:transform doc:name="Transform Message" doc:id="f9257f5c-2426-4c94-9161-942c6ba0a844" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map{
 Complain:{
 	CustomerNumber: $.customerNumber,
 	OrderDetails:{
 		OrderID: $.orderNumber,
 		OrderDate: $.orderDate
 		
 	},
 	ProductDetails:{
 		ProductId: $.productCode,
 		ProductName: $.productName,
 		ProductCost: $.buyPrice
 	}
 }
		
	}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="GetByIDFlow" doc:id="be76ddf9-599e-4be1-8ae7-6882841cd12c" >
		<db:query-single doc:name="Query single" doc:id="a972339f-80ca-4833-9a69-8be59517e481" config-ref="Database_Config">
			<db:sql ><![CDATA[select C.customerNumber,O.orderNumber,O.orderDate,P.productCode,P.productName,P.buyPrice from complaint C join Orders O On O.customerNumber=C.customerNumber join OrderDetails D On D.orderNumber=O.OrderNumber join Products P on P.productCode=D.productCode
where C.complainNumber=:number]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"number":vars.complaintID
}]]]></db:input-parameters>
		</db:query-single>
		<ee:transform doc:name="Transform Message" doc:id="aae787bc-4da9-475d-a307-7e36a894fe42" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
 Complain:{
 	CustomerNumber: payload.customerNumber,
 	OrderDetails:{
 		OrderID: payload.orderNumber,
 		OrderDate: payload.orderDate
 		
 	},
 	ProductDetails:{
 		ProductId: payload.productCode,
 		ProductName: payload.productName,
 		ProductCost: payload.buyPrice
 	}
 }
		
	}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="DeleteFlow" doc:id="b7916f7a-5cef-4234-ae48-f1aabc6c8b04" >
		<db:delete doc:name="Delete" doc:id="3a2af2a4-7a1a-4497-85a4-e3bee4231f59" config-ref="Database_Config">
			<db:sql ><![CDATA[delete from complaint where complainNumber=:number]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"number":vars.complaintID
}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="2d8e6a74-9fc8-4dad-b9e0-04d3129c98bc" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message:"The data for your complaint is deleted"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="PatchFlow" doc:id="024d64f1-f2ce-452a-9bdd-b7a08bc5bc65" >
		<flow-ref doc:name="Flow Reference" doc:id="e3bf0186-f1c1-4541-8ad4-a7166252eb55" name="Subflow"/>
		<db:update doc:name="Update" doc:id="e8a386f2-bc54-4416-9d8d-fe5ecad5c5d7" config-ref="Database_Config">
			<db:sql ><![CDATA[update complaint set complainDesc=:Desc where complainNumber=:number;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"Desc":vars.Desc,
	"number":vars.complaintID
}]]]></db:input-parameters>
		</db:update>
		<ee:transform doc:name="Transform Message" doc:id="7f90c393-82cd-4dc4-aafc-68acc2b1e885" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message:"Your data is updated"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="PostFlow" doc:id="d2ca29d2-b284-49ee-ab54-130295bc7228" >
		<flow-ref doc:name="Flow Reference" doc:id="ee372888-986b-432f-9a63-47c7cbf7fdbe" name="Subflow"/>
		<db:query-single doc:name="Query single" doc:id="70c61a73-5f1c-4282-9e16-db443a2ff7a6" config-ref="Database_Config">
			<db:sql ><![CDATA[select MAX(complainNumber) from complaint;]]></db:sql>
		</db:query-single>
		<ee:transform doc:name="Transform Message" doc:id="d90126db-990c-4b08-8e84-c6381521d077" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	number:"C" ++ ((payload."MAX(complainNumber)"[1 to 3] as Number) +1)
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:insert doc:name="Insert" doc:id="8f0bc7e1-de65-48bc-b422-7d10cc38cfd6" config-ref="Database_Config">
			<db:sql ><![CDATA[insert into complaint (complainNumber,productCode,complainDesc,complainDate,customerNumber) 
values(:number,:code,:desc,:date,:Number)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"number":payload.number,
	"code":vars.Code,
	"desc":vars.Desc,
	"date":vars.Date,
	"Number":vars.Number
}]]]></db:input-parameters>
		</db:insert>
		<db:query-single doc:name="Query single" doc:id="9ef76cef-ba82-43c3-81a3-80829c29e8c8" config-ref="Database_Config">
			<db:sql ><![CDATA[select MAX(complainNumber) from complaint;]]></db:sql>
		</db:query-single>
		<ee:transform doc:name="Transform Message" doc:id="02a52279-d0d4-40f9-90a5-5236e1facde3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message:"New complaint is generated with complaint Number " ++ payload."MAX(complainNumber)"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="201" doc:name="httpStatus" doc:id="c72d235f-7b91-4ee6-b67f-658cf28bbf39" variableName="httpStatus"/>
	</flow>
	<flow name="PutFlow" doc:id="d8161c2b-3549-4b8f-bd4a-da99050dd63f" >
		<flow-ref doc:name="Flow Reference" doc:id="776f1d43-4e2e-44e7-b683-e4993fba14f3" name="Subflow"/>
		<db:query-single doc:name="Query single" doc:id="71678e35-3a75-4d7a-bb06-03e3473326bd" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from complaint where complainNumber=:number;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"number":vars.complaintID default "C010"
}]]]></db:input-parameters>
		</db:query-single>
		<choice doc:name="Choice" doc:id="b5fa2de8-4e74-4898-bf6b-8b8d1b379dad" >
			<when expression="#[sizeOf(payload)&gt;0]">
				<db:update doc:name="Update" doc:id="2e265d69-ba15-45c3-b681-39050e2e1c5b" config-ref="Database_Config">
					<db:sql ><![CDATA[update complaint set productCode=:code,complainDesc=:desc,complainDate=:date,customerNumber=:Number where complainNumber=:number;]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	"number":vars.complaintID,
	"code":vars.Code,
	"desc":vars.Desc,
	"date":vars.Date,
	"Number":vars.Number
}]]]></db:input-parameters>
				</db:update>
			</when>
			<otherwise >
				<db:insert doc:name="Insert" doc:id="5cd4dc84-e603-4eea-83b8-4cab0918c32e" config-ref="Database_Config">
					<db:sql ><![CDATA[insert into complaint (complainNumber,productCode,complainDesc,complainDate,customerNumber) 
values(:number,:code,:desc,:date,:Number)]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	"number":vars.complaintID,
	"code":vars.Code,
	"desc":vars.Desc,
	"date":vars.Date,
	"Number":vars.Number
}]]]></db:input-parameters>
				</db:insert>
			</otherwise>
		</choice>
		<ee:transform doc:name="Transform Message" doc:id="0e2e367a-894d-4588-8f2e-2ddf5d7e3c6e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message:"Your complaint is fully updated"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="201" doc:name="httpStatus" doc:id="3d3c1b22-2b8a-42d1-976f-03334b33a58a" variableName="httpStatus"/>
	</flow>
</mule>
